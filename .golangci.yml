# golangci-lint configuration for terraform-provider-snowflake-ovh
# See https://golangci-lint.run/usage/configuration/ for configuration options

run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  skip-dirs:
    - vendor
    - .git
    - bin
    - dist
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*_generated\\.go$"
  modules-download-mode: readonly
  allow-parallel-runners: true

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  path-prefix: ""
  sort-results: true

linters-settings:
  cyclop:
    max-complexity: 15
    package-average: 10.0

  dupl:
    threshold: 150

  errcheck:
    check-type-assertions: true
    check-blank: true
    exclude-functions:
      - (*github.com/hashicorp/terraform-plugin-log/tflog.Logger).Debug
      - (*github.com/hashicorp/terraform-plugin-log/tflog.Logger).Info
      - (*github.com/hashicorp/terraform-plugin-log/tflog.Logger).Warn
      - (*github.com/hashicorp/terraform-plugin-log/tflog.Logger).Error

  exhaustive:
    check-generated: false
    default-signifies-exhaustive: true

  funlen:
    lines: 100
    statements: 50

  gci:
    sections:
      - standard
      - default
      - prefix(github.com/swcstudio/terraform-provider-snowflake-ovh)
    skip-generated: true
    custom-order: true

  gocognit:
    min-complexity: 20

  goconst:
    min-len: 3
    min-occurrences: 3
    ignore-tests: true

  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport
      - ifElseChain
      - octalLiteral
      - whyNoLint

  gocyclo:
    min-complexity: 15

  godot:
    scope: declarations
    exclude:
      - "^fixme:"
      - "^todo:"
    period: true
    capital: false

  gofmt:
    simplify: true

  gofumpt:
    extra-rules: true

  goheader:
    values:
      const:
        COMPANY: swcstudio
      regexp:
        YEAR: '\d{4}'
    template: |-
      Copyright (c) {{ YEAR }} {{ COMPANY }}
      SPDX-License-Identifier: MPL-2.0

  goimports:
    local-prefixes: github.com/swcstudio/terraform-provider-snowflake-ovh

  golint:
    min-confidence: 0.8

  gomnd:
    settings:
      mnd:
        checks:
          - argument
          - case
          - condition
          - operation
          - return
        ignored-numbers: 0,1,2,3
        ignored-functions: strings.SplitN

  gomodguard:
    allowed:
      modules:
        - github.com/hashicorp/terraform-plugin-framework
        - github.com/hashicorp/terraform-plugin-go
        - github.com/hashicorp/terraform-plugin-log
        - github.com/hashicorp/terraform-plugin-sdk/v2
        - github.com/hashicorp/terraform-plugin-testing
        - github.com/ovh/go-ovh
        - github.com/snowflakedb/gosnowflake
      domains:
        - golang.org
        - google.golang.org
        - github.com
        - gopkg.in

  gosec:
    includes:
      - G101 # Look for hard coded credentials
      - G102 # Bind to all interfaces
      - G103 # Audit the use of unsafe block
      - G104 # Audit errors not checked
      - G106 # Audit the use of ssh.InsecureIgnoreHostKey
      - G107 # Url provided to HTTP request as taint input
      - G108 # Profiling endpoint automatically exposed on /debug/pprof
      - G109 # Potential Integer overflow made by strconv.Atoi result conversion to int16/32
      - G110 # Potential DoS vulnerability via decompression bomb
      - G201 # SQL query construction using format string
      - G202 # SQL query construction using string concatenation
      - G203 # Use of unescaped data in HTML templates
      - G204 # Audit use of command execution
      - G301 # Poor file permissions used when creating a directory
      - G302 # Poor file permissions used with chmod
      - G303 # Creating tempfile using a predictable path
      - G304 # File path provided as taint input
      - G305 # File traversal when extracting zip/tar archive
      - G306 # Poor file permissions used when writing to a new file
      - G307 # Deferring a method which returns an error
      - G401 # Detect the usage of DES, RC4, MD5 or SHA1
      - G402 # Look for bad TLS connection settings
      - G403 # Ensure minimum RSA key length of 2048 bits
      - G404 # Insecure random number source (rand)
      - G501 # Import blocklist: crypto/md5
      - G502 # Import blocklist: crypto/des
      - G503 # Import blocklist: crypto/rc4
      - G504 # Import blocklist: net/http/cgi
      - G505 # Import blocklist: crypto/sha1
      - G601 # Implicit memory aliasing of items from a range statement
    excludes:
      - G104 # Temporarily exclude unhandled errors for existing code
    config:
      G306: "0644"

  gosimple:
    go: "1.21"
    checks: ["all"]

  govet:
    check-shadowing: true
    settings:
      printf:
        funcs:
          - (github.com/hashicorp/terraform-plugin-log/tflog).Debug
          - (github.com/hashicorp/terraform-plugin-log/tflog).Info
          - (github.com/hashicorp/terraform-plugin-log/tflog).Warn
          - (github.com/hashicorp/terraform-plugin-log/tflog).Error
    enable:
      - atomicalign
      - deepequalerrors
      - fieldalignment
      - findcall
      - nilness
      - reflectvaluecompare
      - shadow
      - sortslice
      - timeformat
      - unusedwrite

  ineffassign:
    check-exported: false

  lll:
    line-length: 120
    tab-width: 1

  maligned:
    suggest-new: true

  misspell:
    locale: US
    ignore-words:
      - "snowflake"
      - "ovh"

  nakedret:
    max-func-lines: 30

  nestif:
    min-complexity: 4

  nolintlint:
    allow-leading-space: true
    allow-unused: false
    require-explanation: false
    require-specific: false

  prealloc:
    simple: true
    range-loops: true
    for-loops: false

  predeclared:
    ignore: ""
    q: false

  revive:
    min-confidence: 0.8
    rules:
      - name: atomic
      - name: line-length-limit
        arguments: [120]
      - name: unhandled-error
        arguments:
          - "fmt.Printf"
          - "fmt.Println"
          - "fmt.Print"

  staticcheck:
    go: "1.21"
    checks: ["all"]

  stylecheck:
    go: "1.21"
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]
    dot-import-whitelist:
      - fmt
    initialisms: ["ACL", "API", "ASCII", "CPU", "CSS", "DNS", "EOF", "GUID", "HTML", "HTTP", "HTTPS", "ID", "IP", "JSON", "QPS", "RAM", "RPC", "SLA", "SMTP", "SQL", "SSH", "TCP", "TLS", "TTL", "UDP", "UI", "GID", "UID", "UUID", "URI", "URL", "UTF8", "VM", "XML", "XMPP", "XSRF", "XSS", "SIP", "RTP", "AMQP", "DB", "TS"]
    http-status-code-whitelist: ["200", "400", "404", "500"]

  testpackage:
    skip-regexp: (export|internal)_test\.go

  unparam:
    check-exported: false

  unused:
    go: "1.21"

  whitespace:
    multi-if: false
    multi-func: false

  wrapcheck:
    ignoreSigs:
      - .Errorf(
      - errors.New(
      - errors.Unwrap(
      - .Wrap(
      - .Wrapf(

  wsl:
    strict-append: true
    allow-assign-and-call: true
    allow-multiline-assign: true
    allow-cuddle-declarations: false
    allow-trailing-comment: false
    force-case-trailing-whitespace: 0
    force-err-cuddling: false
    allow-separated-leading-comment: false

linters:
  disable-all: true
  enable:
    # Enabled by default
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    
    # Additional linters for quality
    - asciicheck
    - bidichk
    - bodyclose
    - cyclop
    - dupl
    - durationcheck
    - errorlint
    - exhaustive
    - exportloopref
    - funlen
    - gci
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - gofmt
    - gofumpt
    - goimports
    - gomnd
    - gomodguard
    - goprintffuncname
    - gosec
    - lll
    - makezero
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - noctx
    - nolintlint
    - prealloc
    - predeclared
    - revive
    - rowserrcheck
    - sqlclosecheck
    - stylecheck
    - tenv
    - testpackage
    - thelper
    - tparallel
    - unconvert
    - unparam
    - wastedassign
    - whitespace
    - wrapcheck

  fast: false

issues:
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - funlen
        - goconst
        - gocognit
        - scopelint
        - lll

    # Exclude known linters from partially hard-vendored code
    - path: internal/hmac/
      linters:
        - gosec

    # Exclude shadow checking on the variable named err
    - text: "shadow: declaration of \"err\""
      linters:
        - govet

    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "

    # Exclude certain gosec messages
    - linters:
        - gosec
      text: "G304: Potential file inclusion via variable"

    # Exclude certain gocritic messages
    - linters:
        - gocritic
      text: "unnecessaryDefer:"

    # Terraform providers often have long parameter lists
    - linters:
        - revive
      text: "function-length"

    # Allow globals in main package
    - path: main\.go
      linters:
        - gochecknoglobals

  exclude-use-default: false
  exclude:
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked
    
    # govet: Common false positives
    - (possible misuse of unsafe.Pointer|should have signature)
    
    # staticcheck: Developers tend to write in C-style with an explicit 'break' in a 'switch', so it's ok to ignore
    - ineffective break statement. Did you mean to break out of the outer loop
    
    # gosec: Too many false-positives on 'unsafe' usage
    - Use of unsafe calls should be audited
    
    # gosec: Too many false-positives for parametrized shell calls
    - Subprocess launch(ed with variable|ing should be audited)
    
    # gosec: Duplicated errcheck checks
    - G104
    
    # gocritic: YAGNI
    - (rangeValCopy|hugeParam)

  max-issues-per-linter: 50
  max-same-issues: 3
  new: false
  fix: false

severity:
  default-severity: error
  case-sensitive: false
  rules:
    - linters:
        - dupl
      severity: info
    - linters:
        - gocritic
      severity: info
    - linters:
        - lll
      severity: warning
    - linters:
        - misspell
      severity: warning