# golangci-lint configuration for terraform-provider-ovh.snowflake
# See https://golangci-lint.run/usage/configuration/ for configuration options

run:
    timeout: 5m
    issues-exit-code: 1
    tests: true
    modules-download-mode: readonly
    allow-parallel-runners: true

output:
    formats:
        - format: colored-line-number
    print-issued-lines: true
    print-linter-name: true
    path-prefix: ""
    sort-results: true

linters-settings:
    cyclop:
        max-complexity: 15
        package-average: 10.0

    dupl:
        threshold: 150

    errcheck:
        check-type-assertions: true
        check-blank: true
        exclude-functions:
            - (*github.com/hashicorp/terraform-plugin-log/tflog.Logger).Debug
            - (*github.com/hashicorp/terraform-plugin-log/tflog.Logger).Info
            - (*github.com/hashicorp/terraform-plugin-log/tflog.Logger).Warn
            - (*github.com/hashicorp/terraform-plugin-log/tflog.Logger).Error

    exhaustive:
        check-generated: false
        default-signifies-exhaustive: true

    funlen:
        lines: 100
        statements: 50

    gci:
        sections:
            - standard
            - default
            - prefix(github.com/swcstudio/terraform-provider-ovh.snowflake)
        skip-generated: true
        custom-order: true

    gocognit:
        min-complexity: 15

    goconst:
        min-len: 2
        min-occurrences: 3

    gocritic:
        enabled-tags:
            - diagnostic
            - experimental
            - opinionated
            - performance
            - style
        disabled-checks:
            - dupImport
            - ifElseChain
            - octalLiteral
            - whyNoLint

    gocyclo:
        min-complexity: 15

    godot:
        scope: declarations
        exclude:
            - "^fixme:"
            - "^todo:"
        period: true
        capital: false

    gofmt:
        simplify: true

    gofumpt:
        extra-rules: false

    goimports:
        local-prefixes: github.com/swcstudio/terraform-provider-ovh.snowflake

    mnd:
        checks:
            - argument
            - case
            - condition
            - operation
            - return
        ignored-numbers:
            - "0"
            - "1"
            - "2"
            - "3"
        ignored-functions:
            - strings.SplitN

    gomodguard:
        allowed:
            modules: []
            domains: []
        blocked:
            modules: []

    gosec:
        severity: "low"
        confidence: "low"
        excludes:
            - G304 # Potential file inclusion via variable
            - G204 # Subprocess launched with variable

    govet:
        shadow:
            strict: false

    lll:
        line-length: 120
        tab-width: 1

    makezero:
        always: false

    misspell:
        locale: US
        ignore-words: []

    nakedret:
        max-func-lines: 30

    nestif:
        min-complexity: 4

    nolintlint:
        allow-leading-space: true
        allow-unused: false
        require-explanation: false
        require-specific: false

    prealloc:
        simple: true
        range-loops: true
        for-loops: false

    predeclared:
        ignore: ""
        q: false

    revive:
        rules:
            - name: exported
              arguments:
                  - "checkPrivateReceivers"
                  - "sayRepetitiveInsteadOfStutters"

    staticcheck:
        checks: ["all"]

    stylecheck:
        checks:
            [
                "all",
                "-ST1000",
                "-ST1003",
                "-ST1016",
                "-ST1020",
                "-ST1021",
                "-ST1022",
            ]
        dot-import-whitelist:
            - fmt
        http-status-code-whitelist: ["200", "400", "404", "500"]

    tenv:
        all: false

    testpackage:
        skip-regexp: (export|internal)_test\.go

    thelper:
        test:
            first: true
            name: true
            begin: true
        benchmark:
            first: true
            name: true
            begin: true

    tparallel:
        ignoremissing: false

    unconvert:
        go-version: "1.21"
        remove-all: false

    unparam:
        check-exported: false

    wastedassign:
        strict: false

    whitespace:
        multi-if: false
        multi-func: false

    wrapcheck:
        ignoreSigs:
            - .Errorf(
            - errors.New(
            - errors.Unwrap(
            - .Wrap(
            - .Wrapf(

linters:
    disable-all: true
    enable:
        # Core linters
        - errcheck
        - gosimple
        - govet
        - ineffassign
        - staticcheck
        - typecheck
        - unused

        # Additional quality linters
        - asciicheck
        - bidichk
        - bodyclose
        - cyclop
        - dupl
        - durationcheck
        - errorlint
        - exhaustive
        - copyloopvar
        - funlen
        - gci
        - gochecknoinits
        - gocognit
        - goconst
        - gocritic
        - gocyclo
        - godot
        - gofmt
        - gofumpt
        - goimports
        - mnd
        - gomodguard
        - goprintffuncname
        - gosec
        - lll
        - makezero
        - misspell
        - nakedret
        - nestif
        - nilerr
        - nilnil
        - noctx
        - nolintlint
        - prealloc
        - predeclared
        - revive
        - rowserrcheck
        - sqlclosecheck
        - stylecheck
        - usetesting
        - testpackage
        - thelper
        - tparallel
        - unconvert
        - unparam
        - wastedassign
        - whitespace
        - wrapcheck

    fast: false

issues:
    exclude-dirs:
        - vendor
        - .git
        - bin
        - dist
        - website/node_modules
        - website/.docusaurus
        - website/build
    exclude-files:
        - ".*\\.pb\\.go$"
        - ".*_generated\\.go$"
    uniq-by-line: true
    exclude-rules:
        # Exclude some linters from running on tests files
        - path: _test\.go
          linters:
              - gocyclo
              - errcheck
              - dupl
              - gosec
              - funlen
              - goconst
              - gocognit
              - lll

        # Exclude long line linter from go:generate lines
        - source: "(?i)^//go:generate "
          linters:
              - lll

        # Exclude gosec G304 for file inclusion patterns
        - text: "(?i)G304: Potential file inclusion via variable"
          linters:
              - gosec

        # Exclude common issues that are not problematic in this context
        - text: "(?i)ineffective break statement. Did you mean to break out of the outer loop"
          path: ".+\\.go"

        - text: "(?i)G104"
          path: ".+\\.go"

        # Exclude parameter copying warnings for large structs (common in Terraform providers)
        - text: "(?i)(rangeValCopy|hugeParam)"
          path: ".+\\.go"

        # Exclude shadow warnings for common variables like 'err'
        - text: '(?i)shadow: declaration of "err"'
          linters:
              - govet

        # Exclude unnecessary defer warnings
        - text: "(?i)unnecessaryDefer:"
          linters:
              - gocritic

        # Exclude function length warnings for certain functions
        - text: "(?i)function-length"
          linters:
              - revive

        # Exclude error checking for common cases
        - text: "(?i)Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*printf?|os\\.(Un)?Setenv). is not checked"
          path: ".+\\.go"

        # Exclude subprocess auditing warnings
        - text: "(?i)Subprocess launch(ed with variable|ing should be audited)"
          path: ".+\\.go"

        # Exclude unsafe pointer warnings
        - text: "(?i)(possible misuse of unsafe.Pointer|should have signature)"
          path: ".+\\.go"

        # Exclude unused function warnings (as requested)
        - text: "(?i)func.*is unused"
          linters:
              - unused

        # Exclude specific paths from certain linters
        - path: "internal/hmac/"
          linters:
              - gosec

        - path: "main\\.go"
          linters:
              - gochecknoglobals

        # Exclude audit warnings for unsafe calls
        - text: "(?i)Use of unsafe calls should be audited"
          path: ".+\\.go"

    max-issues-per-linter: 50
    max-same-issues: 10
