name: 🚀 Feature Request
description: Suggest a new feature or enhancement for the Snowflake-OVH Terraform Provider
title: "[FEATURE]: "
labels: ["enhancement", "needs-triage"]
assignees: []

body:
  - type: markdown
    attributes:
      value: |
        Thank you for suggesting a new feature! 
        
        Please fill out this form to help us understand your feature request and evaluate its implementation.
        
        **Note**: For questions about usage or configuration, please use [GitHub Discussions](../../discussions) instead.

  - type: checkboxes
    id: checklist
    attributes:
      label: Pre-submission checklist
      description: Please verify the following before submitting your feature request
      options:
        - label: I have searched existing issues and discussions to ensure this feature hasn't been requested before
          required: true
        - label: I have reviewed the provider documentation to confirm this functionality doesn't already exist
          required: true
        - label: This feature request is specific to the Snowflake-OVH provider (not general Terraform or Snowflake features)
          required: true

  - type: textarea
    id: feature-description
    attributes:
      label: Feature Description
      description: A clear and concise description of the feature you'd like to see
      placeholder: |
        Example: "Add support for managing Snowflake external functions with OVH-specific API gateway integration."
    validations:
      required: true

  - type: textarea
    id: problem-statement
    attributes:
      label: Problem Statement
      description: What problem does this feature solve? What pain point are you experiencing?
      placeholder: |
        Example: "Currently, there's no way to manage Snowflake external functions that integrate with OVH API Gateway, forcing users to manage these manually outside of Terraform."
    validations:
      required: true

  - type: textarea
    id: use-case
    attributes:
      label: Use Case
      description: Describe your specific use case and how this feature would benefit you and other users
      placeholder: |
        Example: "As a data engineer, I want to automate the deployment of Snowflake external functions that call OVH-hosted APIs so that I can maintain infrastructure as code and ensure consistent deployments across environments."
    validations:
      required: true

  - type: dropdown
    id: feature-category
    attributes:
      label: Feature Category
      description: Which category does this feature request fall into?
      options:
        - New Resource
        - New Data Source
        - Resource Enhancement
        - Data Source Enhancement
        - Provider Configuration
        - OVH Integration
        - Snowflake Integration
        - Security Enhancement
        - Performance Improvement
        - Documentation
        - Other
    validations:
      required: true

  - type: dropdown
    id: priority
    attributes:
      label: Priority Level
      description: How important is this feature to your workflow?
      options:
        - Critical (blocking current work)
        - High (significant impact on productivity)
        - Medium (would be helpful but not urgent)
        - Low (nice to have)
    validations:
      required: true

  - type: textarea
    id: proposed-solution
    attributes:
      label: Proposed Solution
      description: How would you like this feature to be implemented? What would the ideal solution look like?
      placeholder: |
        Example: "Add a new resource `snowflake_ovh_external_function` that supports:
        - Integration with OVH API Gateway
        - Automatic SSL certificate management
        - Cost tracking and monitoring
        - Regional deployment options"
    validations:
      required: true

  - type: textarea
    id: terraform-configuration
    attributes:
      label: Desired Terraform Configuration
      description: Show us what you'd like the Terraform configuration to look like
      render: hcl
      placeholder: |
        resource "snowflake_ovh_external_function" "example" {
          name     = "my_external_function"
          database = "my_database"
          schema   = "my_schema"
          
          ovh_api_gateway {
            endpoint = "https://api.example.ovh"
            region   = "eu-west-1"
          }
          
          # Additional configuration...
        }
    validations:
      required: false

  - type: textarea
    id: alternatives
    attributes:
      label: Alternative Solutions
      description: Have you considered any alternative approaches? What other solutions exist?
      placeholder: |
        Example: "Currently using manual API calls or external scripts, but this doesn't integrate well with Terraform state management."
    validations:
      required: false

  - type: textarea
    id: acceptance-criteria
    attributes:
      label: Acceptance Criteria
      description: What specific functionality must be implemented for this feature to be considered complete?
      placeholder: |
        Example:
        - [ ] Resource can create external functions with OVH API Gateway integration
        - [ ] Resource supports all standard Snowflake external function parameters
        - [ ] OVH-specific features like cost tracking are available
        - [ ] Resource can be imported from existing external functions
        - [ ] Comprehensive documentation and examples are provided
    validations:
      required: false

  - type: checkboxes
    id: snowflake-resources
    attributes:
      label: Related Snowflake Resources
      description: Which Snowflake resources would this feature interact with?
      options:
        - label: Warehouses
        - label: Databases
        - label: Schemas
        - label: Tables
        - label: Views
        - label: Functions
        - label: Procedures
        - label: Users
        - label: Roles
        - label: Grants
        - label: Network Policies
        - label: Resource Monitors
        - label: Pipes
        - label: Streams
        - label: Tasks
        - label: External Tables
        - label: Stages
        - label: File Formats

  - type: checkboxes
    id: ovh-services
    attributes:
      label: Related OVH Services
      description: Which OVH services would this feature integrate with?
      options:
        - label: API Gateway
        - label: Object Storage
        - label: Load Balancer
        - label: CDN
        - label: Kubernetes
        - label: Databases (MySQL, PostgreSQL, etc.)
        - label: AI/ML Services
        - label: Monitoring
        - label: Billing/Cost Management
        - label: Identity & Access Management
        - label: Network Services
        - label: Compute Instances

  - type: dropdown
    id: impact-scope
    attributes:
      label: Impact Scope
      description: Who would benefit from this feature?
      options:
        - Individual users
        - Small teams (< 10 people)
        - Large teams (10+ people)
        - Enterprise organizations
        - Specific industries or use cases
        - All Snowflake-OVH users
    validations:
      required: true

  - type: textarea
    id: implementation-notes
    attributes:
      label: Implementation Considerations
      description: |
        Are there any technical considerations, limitations, or challenges that should be noted?
        This could include API limitations, compatibility requirements, or performance considerations.
      placeholder: |
        Example: "This would require OVH API Gateway Premium features and might need special handling for SSL certificates."
    validations:
      required: false

  - type: textarea
    id: breaking-changes
    attributes:
      label: Breaking Changes
      description: Would this feature require any breaking changes to existing functionality?
      placeholder: |
        Example: "No breaking changes expected, this would be a new resource with no impact on existing resources."
    validations:
      required: false

  - type: textarea
    id: testing-strategy
    attributes:
      label: Testing Strategy
      description: How should this feature be tested? What test scenarios should be covered?
      placeholder: |
        Example:
        - Unit tests for resource CRUD operations
        - Integration tests with OVH API Gateway
        - Acceptance tests for various configuration scenarios
        - Performance tests for large-scale deployments
    validations:
      required: false

  - type: textarea
    id: documentation-needs
    attributes:
      label: Documentation Requirements
      description: What documentation would be needed for this feature?
      placeholder: |
        Example:
        - Resource reference documentation
        - Integration guide with OVH services
        - Migration guide from manual setups
        - Example configurations and use cases
    validations:
      required: false

  - type: textarea
    id: additional-context
    attributes:
      label: Additional Context
      description: |
        Add any other context about the feature request here. This could include:
        - Links to relevant Snowflake or OVH documentation
        - Screenshots or diagrams
        - Related issues or discussions
        - Industry standards or best practices
        - Timeline requirements
      placeholder: |
        Any additional information that would help us understand and evaluate this feature request.
    validations:
      required: false

  - type: checkboxes
    id: contribution
    attributes:
      label: Contribution
      description: Would you be willing to help implement this feature?
      options:
        - label: I would be willing to submit a PR to implement this feature
        - label: I would be willing to help with testing and validation
        - label: I would be willing to help with documentation
        - label: I would be willing to provide feedback during development

  - type: markdown
    attributes:
      value: |
        ---
        
        Thank you for suggesting this feature! We appreciate your input in making the Snowflake-OVH provider better.
        
        **Next Steps:**
        1. A maintainer will review your feature request and add appropriate labels
        2. The feature will be evaluated based on impact, feasibility, and alignment with project goals
        3. If accepted, it will be added to our roadmap and prioritized accordingly
        4. You'll be notified of any updates or when development begins
        
        **Community Input:** Other users are encouraged to 👍 this issue and add comments with their use cases to help us understand demand and requirements.