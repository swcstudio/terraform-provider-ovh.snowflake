name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write

env:
  GO_VERSION: '1.21'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v6
      id: import_gpg
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}

    - name: Run tests
      run: |
        go mod download
        go test -v -count=1 -parallel=4 ./...

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}

    - name: Upload assets
      uses: actions/upload-artifact@v3
      with:
        name: release-assets
        path: dist/

  terraform-registry:
    name: Terraform Registry
    runs-on: ubuntu-latest
    needs: goreleaser
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Terraform Registry Notification
      run: |
        echo "Release ${{ github.ref_name }} has been published."
        echo "To publish to Terraform Registry:"
        echo "1. Go to https://registry.terraform.io"
        echo "2. Sign in with GitHub"
        echo "3. Publish provider: swcstudio/snowflake-ovh"
        echo "4. Add GPG public key for verification"

  notify-success:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: [goreleaser, terraform-registry]
    if: success()
    steps:
    - name: Success notification
      run: |
        echo "ðŸŽ‰ Release ${{ github.ref_name }} completed successfully!"
        echo "Provider binaries are available at: ${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref_name }}"